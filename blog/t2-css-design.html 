<!DOCTYPE html>
<head>
  <title>Classes vs IDs</title>
  <meta charset="UTF-8">
  <link rel="stylesheet" type="text/css" href="blog-template-stylsheet.css">
</head>

<main>
  <h1>Classes vs IDs</h1>
  <h2>This is a classy post</h2>
  <h4>9/9/15</h4>

  <section>
    <p>
  <h1>What are best practices associated with using classes vs. ids?</h1>
<p>An id should be unique within a webpage, so the id selector is used if you want to select and modify a single element. A class, on the other hand, is useful if you want to select multiple elements and modify them in the same way.<br>
An example of this is if you have four photos on your webpage, and you want all four photos to be the same size, transparency, and have the same border, it would be efficient to put give them all the same class. That way, you can write your css for one photo and assign those values to each photo by simply inserting the class you made, for ex: <img class="fancy">
    </p>
    <p><h1>More about IDs</h1>
      ID's will become more important when we start adding javascript to html objects because js and jQuery depend on the unique IDs for html elements. Each ID per page should be totally unique - in fact, any html page containing an ID more than just once won't pass validation. Id's are also special because they have this special "hash value" in the URL. If you have a URL like http://hello.com#about, the browser will attempt to locate the element with an ID of "about" and will automatically scroll the page to show the element named "about". Pretty handy to know about, especially when designing those sleek, one page websites that are hot right now. ID's will become more important when we start adding javascript to html objects because js and jQuery depend on the unique IDs for html elements.
</p>
  </section>
</main>

